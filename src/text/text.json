{
  "en": {
    "firstname": "Mihail",
    "lastname": "Divulin",
    "developer": "Web Developer",
    "learnmore": {
      "learn": "Learn",
      "more": "More"
    },
    "about": {
      "hello": "Hello! I'm",
      "main": "I am experienced in such front-end frameworks as Vue, Nuxt, React and, to the lesser extent, Angular and Svelte. In terms of implementing backend logic, I'm proficient in Node.js and Express, as well as working with both SQL and NoSQL (MongoDB and Firestore) databases and websockets. Being competent in both frontend and backend development, I effectively bridge the gap between implementing visual aspects and technical functionality of website, ensuring a seamless user experience. My strongest qualities are perseverance and tenacity, enabling me to solve complex tasks while honing my skills to create more efficient and maintainable websites."
    },
    "discoverprojects": {
      "discover": "Discover",
      "projects": "Projects"
    },
    "projects": {
      "visit": "Visit Project",
      "source": "Source",
      "1": "Tweeter is a simple social networking platform inspired by Twitter, built as part of a legacy full-stack challenge on DevChallenges.io. Designed to showcase my development skills, it replicates core features of popular social media platforms. Tweeter allows users to create accounts, log in, follow other users, and engage through posts by tweeting, liking, reposting, saving and replying. The platform was developed primarily using Nuxt, a modern framework that handles both the frontend and backend functionality, ensuring responsive user experience and robust server-side performance. PostgreSQL was chosen as the database for its powerful querying capabilities and flexible schema design. With a focus on simplicity, this project demonstrates key principles in modern web development - including, but not limited to, state management, database integration and component-based architecture.",
      "2": "This project, dedicated to a custom Warcraft III map, provides a comprehensive database of all playable heroes. Each hero page features detailed talents and ability descriptions, along with video previews - all of which can be edited by authorised users on the website itself. The site also includes a player stats section, where data is retrieved in real time from a Google Sheets document using Google Sheets API, enabling the community to easily track rankings. Built with Nuxt for server-side rendering and seamless navigation, the website offers a smooth and responsive user experience. Additionally, it supports multiple languages via i18n, making it accessible to a global auidence (although at the moment english translation for hero descriptions is extremely rough). This project serves both as a valuable community resource and a demonstration of full-stack development abilities, combining dynamic content management, third-party API integration, and a responsive design.",
      "3": "Unsplash Collection is a full-stack web application built as part of a DevChallenges.io challenge. Developed using the FERN stack (Firebase, Express, React, Node.js) it demonstrates key full-stack development skills, including RESTful API integration, and database management. This application allows users to browse high-quality images from the Unspalsh API, create custom collections, and save their favourite photos - all with a clean, responsive interface built with React and styled with TailwindCSS. ",
      "4": "Code Sharing App is a developer utility that allows users to write, store and share code snippets in multiple programming languages via unique, shareable links. Built as part of a DevChallenges.io full-stack challenge, it leverages the FEAN stack (Firebase, Express, Angular, Node.js) to deliver consistent user experience. This project integrates the Monaco Editor for real-time syntax highlighting and editing. By combining a powerful editor with instant sharing capabilities, powered with Node, Firestore and Express, this app offers a simple yet effective solution for developers.",
      "5": "The Rock-Paper-Scissors app was my first project, developed as part of a legacy DevChallenges.io challenge. It uses Next.js (a React based framework) to deliver a simple, interactive user experience entirely on the client side. This app doesn't include a backend, as all game state are stored locally using browser local storage. The maib challenges of this project were implementing game logic and managing state persistence via local storage.",
      "6": "Task Board is a full-stack task management application designed to demonstrate core CRUD operations and practical full-stack development skills. It allows users to create, update and delete tasks on a board, while providing a clean and responsive user interface, styled using TailwindCSS, ensuring seamless experience across a wide range of devices. Developed using FEVN stack (Firebase, Express, Vue, Node.js), the application supports all fundamental HTTP methods - GET, POST, PUT, DELETE. Key features of this application include: customizable board names and descriptions, and an ability to create, delete, and customize tasks. This project showcases proficiency in modern web-technologies, principles of client-server architecture and the development of single-page applications (SPA).",
      "7": "Watchalong is an online video player that allows users to watch videos together in synchronized rooms. This project uses Vue for the frontend and Node.js with Express for the backend, relying heavily on WebSockets and WebTorrent for real-time communication and peer-to-peer media sharing. Users can create or join rooms where video playback is synchronized across all participants. Each room features a shared playlist, allowing participants to queue content either by uploading local video files (shared peer-to-peer via WebTorrent) or by submitting direct video URLs, including support for HLS .m3u8 streams. One of the most complex challenges in this project was designing a robust state synchronization and implementing a reliable system to ensure synchronized playback of both local and remote media sources. This task was accomplished by implementing event-driven architecture. The result demonstrates advanced problem-solving skills and architectural planning in a full-stack environment.",
      "8": "My Unspash is a web application inspired by the popular photo-sharing platform Unsplash, built as a part of a DevChallenges.io challenge. The goal of this project was to recreate grid-based image display system along with functionaly to upload and retrieve images. The application is builts using Svelte and styled with TailwindCSS, offering a clean, responsive layout seamlessly across a wide range of screen sizes. For image hosting, the app integrates Imgur API, while Firebase Firestore is used for storing metadata, ensuring effective cloud-based operations. Overall, this project demonstrates proficiency in crafting modern, responsive user interfaces, managing third-party API integrations, and handling file uploads."
    },
    "reach": {
      "1": "Let's create more together! Reach out at",
      "2": "to collaborate."
    }
  },
  "ru": {
    "firstname": "Михаил",
    "lastname": "Дивулин",
    "developer": "Разработчик",
    "learnmore": {
      "learn": "Узнать",
      "more": "Больше"
    },
    "about": {
      "hello": "Привет! Я",
      "main": "Я работаю с современными фронтенд-фреймворками, такими как Vue, Nuxt, React и, в меньшей степени, Angular и Svelte. В бэкенд разработке владею Node.js и Express, а так же имею опыт работы с реляционными (SQL) и нереляционными (NoSQL - MongoDB и Firestore) базами данных. Обладая навыками как фронтенд-, так и бэкенд-разработки, я эффективно объединяю визуальную и функциональную составляющие веб-сайта, обеспечивая бесшовный пользовательский опыт. Мои сильные стороны - упорство и целеустремлённость - позволяют успешно решать сложные задачи, непрерывно совершенствуя навыки для создания более эффективных и качественных решений."
    },
    "discoverprojects": {
      "discover": "Прошлые",
      "projects": "Проекты"
    },
    "projects": {
      "visit": "Посетить проект",
      "source": "Источник",
      "1": "Tweeter - это простая социальная сеть вдохновленная Twitter. Проект был разрбаотан в рамках старого full-stack челленджа на платформе DevChallenges.io с целью демонстрации моих навыков в сфере веб-разработки. В данном приложении реализованы ключевые функции соицальной сети: пользователи могут создавать или входить в аккаунты, подписываться друг на друга, а также взаимодействовать с другими пользователями через посты - публиковать, ставить лайки, репостить, сохранять и отвечать. Платформа была создана с использованием Nuxt - современного фреймворка объединяющего в себе фронтенд и бекэнд функциональность, что обеспечивает отзывчивый интерфейс и надежную серверную часть. В качестве базы данных была выбрана PostgreSQL благодаря её мощным возможностям в работе с запросами и гибкой структуры. Являясь упрощенной версией социальной сети, данный проект демонстрирует ключевые принципы современной веб-разработки: state management, интеграция баз данных, а также компонентно ориентированный подход к архитектуре.",
      "2": "Этот проект, посвященный пользовательской карте для Warcraft III, представляет собой подробную базу данных всех доступных персонажей. На отдельной странице каждого героя представлены подробные описания его способностей и талантов, а также доступны видео-превью. Для обеспечения актуальности информации была реализована поддержка CRUD функционала: авторизованные пользователи могут редактировать, добавлять и, при необходимости, удалять контент. На сайте также имеется раздел со статистикой игроков - данные загружаются в реальном времени из документа Google Sheets с помощью Google Sheets API, что позволяет сообществу проще отслеживать свою статистику. Проект разработан с применением фреймворка Nuxt, обеспечивюащего серверный рендеринг и плавную навигацию, а благодаря поддержке i18n, платформа доступна на нескольких языках. Проект одновременно служит полезным ресурсом для сообщества и является демонстрацией моих навыков веб-разработки: работы с динамическим контентом, интеграции сторонних API и поддержки мультиязычности.",
      "3": "Unsplash Collection - это полнофункциональное веб-приложение разработанное в рамках одного из заданий на платформе DevChallenges.io. Проект построен с использвоанием стека FERN (Firebase, Express, React, Node.js) и демонстрирует ключевые навыки full-stack разработки: интеграцию с RESTful API и работу с базой данных. Приложение позволяет пользователям просматривать изображения полученные при помощи Unsplash API, создавать из них коллекции и сохранять любимые фотографии. Интерфейс разработан на React и оформлен при помощи TailwindCSS, что обеспечивает современный дизайн и адаптацию под разные устройства.",
      "4": "Code Sharing App - это веб-приложение для разработчиков, позволяющее создавать, сохранять и делиться фрагментами кода написанными на различных языках программирования с помощью генерируемых ссылок. Проект был разработан в рамках испытаниях на платформе DevChallenges.io и реализован с использованием стека FEAN (Firebase, Express, Angular, Node.js) что обеспечивает его стабильную и надежную работу. Благодаря сочетанию мощного редактора и функции публикации, обеспеченной Node.js, Firestore и Express, приложение предлагает простое, но эффективное решение для обмена кодом.",
      "6": "Task Board - это full-stack приложение для менеджмента задач, разработанное с целью демонстрации основных CRUD-операций. Оно позволяет пользователям создавать, редактировать и удалять задачи на интерактивной доске, предлагая при этом чистый и адаптивный интерфейс, оформленный с помощью TailwindCSS, что обеспечивает удобство пользования на любых устройствах. Проект реализован с использованием стека FEVN (Firebase, Express, Vue, Node.js) и поддерживает все основные методы HTTP-запросов: GET, POST, PUT, DELETE. Среди ключевых функций веб-сайта - возможность изменять название и описание доски, а также создавать, редактировать и удалять задачи. Проект демонстрирует уверенное владение современными веб-технологиями, принципами архитектуры взаимодействия клиента с сервером и построения одностраничных приложений (SPA).",
      "7": "Watchalong - это онлайн-видеоплеер, позволяющий пользователям синхронно смотреть видео. Проект реализован с использованием Vue на фронтенде и Node.js + Express на бэкенде. Для синхронного воспроизведения также применяются технологии WebSockets и WebTorrent обеспечивающие обмен данными в реальном времени и передачу медиа файлов peer-to-peer. Пользователи могут создавать или присоединяться к комнатам, где воспроизведение видео синхронизируется между всеми участниками. Каждая комната имеет общий плейлист, в который можно добавлять контент как через загрузку локальных файлов (распространяемых между пользователями посредством технологии WebTorrent), так и с помощью прямых ссылок, включая поддержку HLS-потоков (.m3u8). Одной из основных задач при разработке было создание надёжной системы синхронизации состояния и воспроизведения медиа из различных источников. Для этого была реализована событийно-ориентированная архитектура (event-driven architecture), обеспечивающая точную координацию действий между клиентами. Проект демонстрирует навыки проектирования архитектуры и решения комплексных задач в сфере веб-разработки.",
      "8": "My Unsplash - это веб-приложение, вдохновленное популярной платформой для обмена фотографиями Unsplash. Проект был создан в рамках челленджа на платформе DevChallenges.io, и его основная задача заключалась в создании функционала для загрузки и корректного отображения изображений. Приложение построено с использованием Svelte в качестве фронтэнд-фреймворка и стилизовано с применением TailwindCSS, что обеспечивает чистый и адаптивный интерейс, корректно отображающийся на широком спектре устройств. Для размещения изображений использутеся Imgur API, а их метаданные хранятся в Firebase Firestore что позволяет эффективно организовать работу с облачными сервисами. В целом, проект демонстрирует навыки создания современынх адаптивных интерфейсов, интеграции сторонних API и обработки загрузки файлов."
    },
    "reach": {
      "1": "Создадим больше вместе! Свяжитесь со мной по адресу",
      "2": "для сотрудничества."
    }
  },
  "ua": {
    "firstname": "Михайло",
    "lastname": "Дівулін",
    "developer": "Розробник",
    "learnmore": {
      "learn": "Читати",
      "more": "Більше"
    },
    "about": {
      "hello": "Привіт! Я",
      "main": "Я працюю з сучасними фронтенд-фреймворками, такими як Vue, Nuxt, React, а також, у меншій мірі, з Anular та Svelte. У бекенд-розробці володію Node.js та Express, маю досвіт роботи як з реляційними (SQL), так і з нереляційними базами даних (NoSQL - MongoDB та Firestore). Завдяки навичкам як фронтенд-, так і бекенд розробки, я ефективно поєдную візуальну та функціональну складові вебсайту, забезпечуючи цілісний та безперебійний користувацький досвід. Мої сильні сторони - наполегливість і цілеспрямованість - дозволяють успішно вирішувати складні завдання, постійно вдосконалюючи навички для створення більш ефективних і якісних рішень."
    },
    "discoverprojects": {
      "discover": "Минулі",
      "projects": "Проекти"
    },
    "projects": {
      "visit": "Перейти до проєкту",
      "source": "Джерело",
      "1": "Tweeter - це проста соціальна мережа, натхненна Twitter. Проєкт був розроблений у межах старого full-stack челенджу на платформі DevChallenges.io з метою демонстрації моїх навичок у сфері веброзробки. У цьому додатку реалізовано ключові функції соціальної мережі: користувачі можусть створювати або входити в акаунти, підписуватися одне на одного, а також взаємодіяти через пости - публікувати, ставити вподобайки, репостити, зберігати та відповідати. Платформу створену з використанням Nuxt - сучасного фреймворку, що поєднує у собі фронтенд- і бекенд-функціональність, забезпечуючи зручний інтерфейс і надійну серверну частину. Як базу даних було обрано PostgreSQL завдяки її потужним можливостям роботи із запитами та гнучкій структурі. Будучи спрощеною версією соціальної мережі, цей проєкт демонструє ключові принципи сучасної веброзробки: керування станом (state management), інтеграцію з базами даних, а також компонентно-орієнтовану архітектуру.",
      "2": "Цей проєкт, присвячений користувацькій карті для Warcraft III, є детальною базою даних усіх доступних персонажів. На окремій сторінці кожного героя представлено докладний опис його здібностей і талантів, а також доступні відеопрев'ю. Для забезпечення актуальності інформації реалізовано підтримку CRUD-функціоналу: авторизовані користувачі можуть редагувати, додавати або, за потреби, видаляти контент. На сайті також є розділ зі статистикою гравців - дані завантажуються в реальному часі з документа Google Sheets за допомогою Google Sheets API, що дає змогу спільноті зручно відстежувати власні показники. Проєкт розроблено з використанням фреймворку Nuxt, який підтримує серверний рендеринг і забезпечуює плавну й зручну навігацію. Завдяки підтримці i18n платформа доступна кількома мовами. Цей проєкт слугує водночас корисним ресурсом для спільноти та демонстрацією моїх навичок веброзробки: роботи з динамічним контентом, інтеграції сторонніх API та підтримки мультимовності.",
      "3": "Unsplash Collection - це повнофункціональний вебзастосунок, розроблений у межах одного із завдань на платформі DevChallenges.io. Проєкт створено з використанням стеку FERN (Firebase, Express, React, Node.js) і демонструє ключові навички full-stack розробки: інтеграцію з RESTful API та роботу з базою даних. Застосунок дозволяє користувачам переглядати зображення, отримані через Unsplash API, створювати з них колекції та зберігати улюблені фотографії. Інтерфейс розроблено на React і стилізовано за допомогою TailwindCSS, що забезпечує сучасний дизайн і адаптивність до різних пристроїв.",
      "4": "Code Sharing App - це вебзастосунок для розробників, що дозволяє створювати, зберігати та ділитися фрагментами коду, написаними різними мовами програмування, за допомогою згенерованих посилань. Проєкт було розроблено в межах челенджу на платформі DevChallenges.io та реалізовано на базі стеку FEAN (Firebase, Express, Angular, Node.js), що забезпечує його стабільну та надійну роботу. Завдяки поєднанню потужного редактора та функції публікації, реалізованої за допомогою Node.js, Firestore і Express, застосунок пропонує просте, але ефективне рішення для обміну кодом.",
      "6": "Task Board - це full-stack застосунок для управління завданнями, створений з метою демонстрації основних CRUD-операцій. Він дозволяє користувачам створювати, редагувати й видаляти завдання на інтерактивній дошці, пропонуючи водночас чистий та адаптивний інтерфейс, оформлений за допомогою TailwindCSS, що забезпечує зручне користування на будь-яких пристроях. Проєкт реалізовано з використанням стеку FEVN (Firebase, Express, Vue, Node.js) і він підтримує всі основні методи HTTP-запитів: GET, POST, PUT, DELETE. Серед ключових функцій вебзастосунку - можливість змінювати назву та опис дошки, а також створювати, редагувати й видаляти завдання. Цей проєкт демонструє впевнене володіння сучасними вебтехнологіями, принципами архітектури взаємодії клієнта з сервером та побудови односторінкових застосунків (SPA).",
      "7": "Watchalong - це онлайн-відеоплеєр, який дозволяє користувачам синхронно переглядати відео. Проєкт реалізовано з використанням Vue на фронтенді та Node.js з Express на бекенді. Для синхронного перегляду було застосовано технології WebSockets і WebTorrent, що забезпечують обмін даними в реальному часі та передачу медіафайлів у форматі peer-to-peer. Користувачі можуть створювати або приєднуватися до кімнат, де відтворення відео синхронізується між усіма учасниками. Кожна кімната має спільний плейлист, до якого можна додавати контент як через завантаження локальних файлів (які поширюються між користувачами за допомогою технології WebTorrent), так і за прямими посиланнями, зокрема з підтримкою HLS-потоків (.m3u8). Одним із головних завдань під час розробки було створення надійної системи синхронізації стану й відтворення медіа з різних джерел. Для цього було реалізовано подієво-орієнтовану архітектуру (event-driven architecture), яка дозволяє точно координувати дії між клієнтами. Цей проєкт демонструє навички проєктування архітектури та вирішення комплексних завдань у сфері веброзробки.",
      "8": "My Unsplash - це вебзастосунок, натхненний популярною платформою для обміну фотографіями Unsplash. Проєкт було створено в рамках челенджу на платформі DevChallenges.io, і його основним завданням було реалізувати функціонал для завантаження зображень і їх коректного відображення. Застосунок побудовано з використанням Svelte як фронтенд-фреймворку та стилізовано за допомогою TailwindCSS, що забезпечує чистий і адаптивний інтерфейс, який коректно відображається на широкому спектрі пристроїв. Для розміщення зображень використовується Imgur API, а їхні метадані зберігаються у Firebase Firestore, що дає змогу ефективно працювати з хмарними сервісами. У цілому, проєкт демонструє навички створення сучасних адаптивних інтерфейсів, інтеграції сторонніх API та обробки завантаження файлів."
    },
    "reach": {
      "1": "Створимо більше разом! Зв`язатись за адресою",
      "2": "для співпраці."
    }
  }
}
